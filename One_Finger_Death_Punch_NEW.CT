<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"nomissLeft"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem, 1024)
aobscan(aob, 0F85 88000000 90 8B 8D D4F9FFFF BA 01000000) //+0x6 jmp

label(return)

newmem:
jmp return

aob:
jmp newmem
nop

return:
registersymbol(aob)

[DISABLE]
aob:
db 0F 85 88 00 00 00 90 8B 8D D4 F9 FF FF BA 01 00 00 00
unregistersymbol(aob)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"error(noturnback)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem1, 1024)
aobscan(aob1, 83 BD BCFDFFFF 00 75 49 8B 85 D4F9FFFF 8B 80 74070000) //+0x7 jmp

label(return1)

newmem1:
cmp dword ptr [ebp-00000244],01
jmp return1

aob1:
jmp newmem1
nop
nop

return1:
registersymbol(aob1)

[DISABLE]
aob1:
db 83 BD BC FD FF FF 00 75 49 8B 85 D4 F9 FF FF 8B 80 74 07 00 00
unregistersymbol(aob1)
dealloc(newmem1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"inffightRight"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem2, 1024)
aobscan(aob2, 83 BD 14FEFFFF 00 75 63 8B 8D D4F9FFFF) //+0x7 jmp

label(return2)

newmem2:
cmp dword ptr [ebp-000001EC],01
jmp return2

aob2:
jmp newmem2
nop
nop

return2:
registersymbol(aob2)

[DISABLE]
aob2:
db 83 BD 14 FE FF FF 00 75 63 8B 8D D4 F9 FF FF
unregistersymbol(aob2)
dealloc(newmem2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"nomissRight"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem3, 1024)
aobscan(aob3, 0F85 88000000 90 8B 8D D4F9FFFF BA 02000000) //+0x6 jmp

label(return3)

newmem3:
jmp return3

aob3:
jmp newmem3
nop

return3:
registersymbol(aob3)

[DISABLE]
aob3:
db 0F 85 88 00 00 00 90 8B 8D D4 F9 FF FF BA 02 00 00 00
unregistersymbol(aob3)
dealloc(newmem3)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"finalyTheFinale"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem1, 1024)
alloc(myce_variable, 32)
registersymbol(myce_variable)
aobscan(aob1, 83 BD BCFDFFFF 00 75 49 8B 85 D4F9FFFF 8B 80 74070000) //+0x7 jmp

label(return1)

myce_variable:
dd 1

newmem1:
mov eax, dword ptr [myce_variable]
xor eax, 01
mov dword ptr [myce_variable], eax
cmp dword ptr [ebp-00000244],eax
jmp return1

aob1:
jmp newmem1
nop
nop

return1:
registersymbol(aob1)

[DISABLE]
aob1:
db 83 BD BC FD FF FF 00 75 49 8B 85 D4 F9 FF FF 8B 80 74 07 00 00
unregistersymbol(aob1)
unregistersymbol(myce_variable)
dealloc(newmem1)
dealloc(myce_variable)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"skipminiboss(noturnback)(ERROR)(OLD)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aob4, EB 0D 8B 8D D4F9FFFF FF 15 ?? ?? ?? ?? 90 90 90 90 E9 EC100000 90)
registersymbol(aob4)

aob4:
jmp aob4+2

[DISABLE]
aob4:
db EB 0D 8B 8D D4F9FFFF FF 15 5C94CC00 90 90 90 90 E9 EC100000 90
unregistersymbol(aob4)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"inffightBrawlRight(noturnback)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmemBAR, 1024)
aobscan(aobBAR, 83 BD CCFAFFFF 00 75 70 8B 85 D4F9FFFF) //89 85 CCFAFFFF 83 BD CCFAFFFF 00 75 70 8B 85 D4F9FFFF

label(rethereBAR)

newmemBAR:
cmp dword ptr [ebp-00000534],01
//jne aobBAR+72
jmp rethereBAR

aobBAR:
jmp newmemBAR
nop
nop

rethereBAR:
registersymbol(aobBAR)

[DISABLE]
aobBAR:
db 83 BD CCFAFFFF 00 75 70 8B 85 D4F9FFFF
dealloc(newmemBAR)
unregistersymbol(aobBAR)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"inffightBrawlLeft"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmemBAL, 1024)
alloc(myce_var_BAL, 32)
aobscan(aobBAL, 83 BD 68FAFFFF 00 75 70 8B 85 D4F9FFFF)

myce_var_BAL:
dd 1

label(rethereBAL)

newmemBAL:
mov eax, dword ptr [myce_var_BAL]
xor eax, 01
mov dword ptr [myce_var_BAL], eax
cmp dword ptr [ebp-00000598], eax
jmp rethereBAL
//cmp dword ptr [ebp-00000598],00

aobBAL:
jmp newmemBAL
nop
nop

rethereBAL:
registersymbol(aobBAL)

[DISABLE]
aobBAL:
db 83 BD 68 FA FF FF 00 75 70 8B 85 D4 F9 FF FF
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"nobrawlmiss"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmemBINV, 1024)
aobscan(aobBINV, 55 8B EC 50 89 4D FC 83 3D ?? ?? ?? ?? 00 74 05 E8 ?? ?? ?? ?? 90 8B 45 FC)

label(rethereBINV)

newmemBINV:
ret

jmp rethereBINV

aobBINV:
ret

rethereBINV:
registersymbol(aobBINV)

[DISABLE]
aobBINV:
db 55 8B EC
dealloc(newmemBINV)
unregistersymbol(aobBINV)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of cmp dword ptr [ebp-00000244],00</Description>
      <Address>12EB1F14</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>BC</Byte>
        <Byte>FD</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>BD</Byte>
        <Byte>BC</Byte>
        <Byte>FD</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>75</Byte>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>85</Byte>
        <Byte>D4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne 06F30F9C</Description>
      <Address>06F30F37</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>83</Byte>
        <Byte>7D</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>63</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>8B</Byte>
        <Byte>85</Byte>
        <Byte>D4</Byte>
        <Byte>F9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [eax+0000016C],00000001</Description>
      <Address>06F30F46</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>80</Byte>
        <Byte>14</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
        <Byte>80</Byte>
        <Byte>6C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>85</Byte>
        <Byte>D4</Byte>
        <Byte>F9</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [eax+00000184],00000001</Description>
      <Address>06F30F6F</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>80</Byte>
        <Byte>14</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
        <Byte>80</Byte>
        <Byte>84</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>D4</Byte>
        <Byte>F9</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne 06F327AB</Description>
      <Address>06F3271D</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>83</Byte>
        <Byte>7D</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>85</Byte>
        <Byte>88</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>D4</Byte>
        <Byte>F9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jmp 06F30F29</Description>
      <Address>06F30F1F</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>78</Byte>
        <Byte>FA</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>EB</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>D2</Byte>
        <Byte>89</Byte>
        <Byte>95</Byte>
        <Byte>78</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of cmp dword ptr [ebp-18],00</Description>
      <Address>06F30F33</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>89</Byte>
        <Byte>45</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>7D</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>75</Byte>
        <Byte>63</Byte>
        <Byte>90</Byte>
        <Byte>8B</Byte>
        <Byte>85</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne 06F30E97</Description>
      <Address>06F30E7D</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>83</Byte>
        <Byte>7D</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>D4</Byte>
        <Byte>F9</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne 06F30E23</Description>
      <Address>06F30E09</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>83</Byte>
        <Byte>7D</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>D4</Byte>
        <Byte>F9</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne 06F30DAF</Description>
      <Address>06F30D7A</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>83</Byte>
        <Byte>7D</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>33</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>8B</Byte>
        <Byte>85</Byte>
        <Byte>D4</Byte>
        <Byte>F9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne One_Finger_Death_Punch.Game1::Man_Move+229F</Description>
      <Address>15E92259</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>83</Byte>
        <Byte>7D</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>85</Byte>
        <Byte>88</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>D4</Byte>
        <Byte>F9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne One_Finger_Death_Punch.Game1::Man_Move+2763</Description>
      <Address>15E9271D</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>83</Byte>
        <Byte>7D</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>85</Byte>
        <Byte>88</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>D4</Byte>
        <Byte>F9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of cmp dword ptr [ebp-00000534],00</Description>
      <Address>159111AA</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>CC</Byte>
        <Byte>FA</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>BD</Byte>
        <Byte>CC</Byte>
        <Byte>FA</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>75</Byte>
        <Byte>70</Byte>
        <Byte>8B</Byte>
        <Byte>85</Byte>
        <Byte>D4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of push ebp</Description>
      <Address>135AC500</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>16</Byte>
        <Byte>24</Byte>
        <Byte>94</Byte>
        <Byte>88</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>55</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>EC</Byte>
        <Byte>50</Byte>
        <Byte>89</Byte>
        <Byte>4D</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>aob4</Name>
      <Address>14132806</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob</Name>
      <Address> 162D2259</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob2</Name>
      <Address> 162D2470</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob3</Name>
      <Address> 162D271D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob1</Name>
      <Address> 162D1F14</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobBAR</Name>
      <Address> 162D11AA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobBAL</Name>
      <Address> 162D0B03</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobBINV</Name>
      <Address> 013AC4E0</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
